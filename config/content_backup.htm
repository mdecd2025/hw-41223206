<h1>About</h1>
<p>課程名稱: 協同產品設計實習 - Collaborative Product Design Practice</p>
<p>學員作業網站: <a href="https://mdecd2025.github.io/hw-41223206/">https://mdecd2025.github.io/hw-41223206</a></p>
<p>學員作業倉儲: <a href="https://github.com/mdecd2025/hw-41223206">https://github.com/mdecd2025/hw-41223206</a></p>
<hr/>
<p>課程代號: cd2025</p>
<p>Teams 線上教學:</p>
<p style="padding-left: 30px;">以 "學號@nfu.edu.tw" 登入<span> </span><a href="https://login.microsoftonline.com/">https://login.microsoftonline.com/</a><span> </span>Office 365</p>
<p style="padding-left: 30px;">Teams 團隊代碼: <span>p5z4eku</span></p>
<hr/>
<p>課程評分:</p>
<p style="padding-left: 30px;">Homework (30%) - 每週至少提交兩次與課程進度有關的內容, 完成後填回自評表單</p>
<p style="padding-left: 30px;">Exam (40%) - 建立包含操作流程影片、心得以及提供檔案下載的網頁後填回自評表單</p>
<p style="padding-left: 30px;">Final Report (30%) - 利用網頁內容進行簡報並提交 pdf 格式書面報告, 完成後填回自評表單</p>
<p></p>
<h2>repo</h2>
<h1>Tasks</h1>
<p>task1 與 task2 任務目的在建立可於近端維護個人作業與協同作業的準備工作:</p>
<p>task1 (自行製作可攜程式系統)</p>
<p>task2 (使用 SSH 協定執行作業倉儲的推送)</p>
<p>task3 與 task4 則為 HW2 的內容之一</p>
<p>task3 (使用 Solvespace 建立平面四連桿系統零組件)</p>
<p>task4 (使用 Onshape 建立平面四連桿系統零組件)</p>
<p>task5 與 task6 則為 HW3 的主要內容</p>
<p>task5 (Webots Tutorial 1 ~3)</p>
<p>task6 (Webots Tutorial 4 ~6)</p>
<h2>task1</h2>
<p><span>練習如何利用舊版 Python 配置新版 Python 的可攜程式</span></p>
<p><span><iframe allowfullscreen="allowfullscreen" height="314" src="//www.youtube.com/embed/8aSAu9V9fAo" width="560"></iframe></span></p>
<h3>list</h3>
<p><iframe allowfullscreen="allowfullscreen" height="314" src="//www.youtube.com/embed/mVhaFfnJ0YA" width="560"></iframe></p>
<p><a href="https://mdecd2025.github.io/hw-41223206/content/Brython.html?src=https://gist.githubusercontent.com/41223206/c06557cb681a4bd5c071a80686139f2a/raw/15cf7494a5f13f9fc8321ef31ff76a52601be6c5/g3*list" title="g3 結果">g3 結果</a></p>
<pre class="brush:py;auto-links:false;toolbar:false" contenteditable="false">from browser import html, document, ajax
 
 # 目標 URL
 url = "https://mde.tw/list/2b.txt"
 
 # G3 組員學號清單
 g3_members = {"41223206", "41223226", "41223227", "41223228", "41223235", "41223215"}
 
 # 定義回呼函式來處理資料
 def on_complete(req):
     if req.status == 200:
         data = req.text.splitlines()  # 以換行分割成數列
         all_stud = [line.strip() for line in data[1:] if line.strip()]  # 移除空白並排除空行
 
         # 取得網頁上的 div 來顯示內容
         brython_div1 = document["brython_div1"]
 
         # 過濾 G3 組員
         g3_list = []
         for student in all_stud:
             parts = student.split()  # 用空白分割
             if len(parts) == 2:
                 student_id, student_account = parts
                 if student_id in g3_members:
                     g3_list.append((student_id, student_account))
 
         # 顯示組員數量
         brython_div1 &lt;= f"G3 組別 - 組員共 {len(g3_list)} 名"
         brython_div1 &lt;= html.BR() * 2
 
         # 逐行顯示 G3 組員
         for student_id, student_account in g3_list:
             # 學號超連結
             student_id_link = html.A(student_id, href=f"https://mdecd2025.github.io/hw-{student_account}", target="_blank")
 
             # 帳號超連結
             github_link = html.A(student_account, href=f"https://github.com/mdecd2025/hw-{student_account}", target="_blank")
 
             # 插入內容
             brython_div1 &lt;= student_id_link + " : " + github_link
             brython_div1 &lt;= html.BR()
 
 # 發送 AJAX 請求
 ajax.get(url, oncomplete=on_complete)</pre>
<p></p>
<p></p>
<h2>task2</h2>
<p>任務一 使用chat gpt用出Ipv6名單</p>
<p><iframe allowfullscreen="allowfullscreen" height="314" src="//www.youtube.com/embed/2_8phO1HTvg" width="560"></iframe></p>
<p><a href="https://mdecd2025.github.io/hw-41223206/content/Brython.html?src=https://gist.githubusercontent.com/41223206/9589c2888f3bc389e4cf6c54e110b364/raw/058bfce14c94c08520fd79214fe93e7aedf310d1/%25E5%2585%25A7%25E5%25AE%25B9">任務一</a></p>
<pre class="brush:py;auto-links:false;toolbar:false" contenteditable="false">from browser import document, html
 
 # 取得目標 div
 div = document["brython_div1"]
 
 # 基本 IPv6 前綴
 base_ip = "2001:288:6004:17:fff1:cd25:0:b"
 
 # 學員編號列表
 student_ids = [
     "40923137", "41023114", "41023205", "41023206", "41023210", "41023213", "41023215", "41023216", "41023218", "41023232",
     "41023237", "41071202", "41071203", "41071204", "41223201", "41223202", "41223203", "41223205", "41223206", "41223207",
     "41223208", "41223209", "41223210", "41223211", "41223212", "41223214", "41223215", "41223216", "41223217", "41223218",
     "41223219", "41223220", "41223221", "41223222", "41223223", "41223224", "41223225", "41223226", "41223227", "41223228",
     "41223229", "41223230", "41223231", "41223232", "41223233", "41223234", "41223235", "41223236", "41223237", "41223239",
     "41223240", "41223242", "41223243", "41223244", "41223245", "41223246", "41223247", "41223248", "41223249", "41223250",
     "41223251", "41223252", "41223253", "41271217", "41271236", "41271237"
 ]
 
 # 產生連結
 for index, student_id in enumerate(student_ids, start=1):
     # 這裡使用序號（index）來生成 IPv6 地址的一部分
     full_ip = f"{base_ip}{index:03d}"  # 使序號保持三位數格式
     url = f"http://[{full_ip}]:8000"
 
     # 顯示序號和學號
     text = f"{index}. 學號 {student_id}"
     link = html.A(text, href=url, target="_blank")
 
     div &lt;= link
     div &lt;= html.BR()  # 每個連結後換行
 </pre>
<h3>w3</h3>
<p><iframe allowfullscreen="allowfullscreen" height="314" src="//www.youtube.com/embed/RpM03LTTtgs" width="560"></iframe></p>
<p><a href="https://mdecd2025.github.io/hw-41223206/content/Brython.html?src=https://gist.githubusercontent.com/41223206/50d58e68eae75af03985423f21cb61ee/raw/47a6445b3dc6ecd2cb7fad791d000aac8b85450b/%25E6%25B2%2592%25E7%25B5%2584">未分組名單</a></p>
<pre class="brush:py;auto-links:false;toolbar:false" contenteditable="false"># 2B 班學生 GitHub 帳號
 students_2B = {
     "40923137": "a40923137",
     "41023114": "41023114",
     "41023205": "c-ching",
     "41023206": "tseYU000",
     "41023210": "junpig10",
     "41023213": "41023213",
     "41023215": "41023215",
     "41023216": "41023216",
     "41023218": "snowfall-killer",
     "41023232": "YUN4",
     "41023237": "www000123",
     "41071202": "41071202",
     "41071203": "41071203",
     "41071204": "41071204",
     "41223201": "41223201",
     "41223202": "41223202",
     "41223203": "41223203",
     "41223205": "41223205",
     "41223206": "41223206",
     "41223207": "emma0312",
     "41223208": "41223208-hw",
     "41223209": "41223209",
     "41223210": "",
     "41223211": "41223211",
     "41223212": "jjjay41223212",
     "41223214": "",
     "41223215": "RAY41223215",
     "41223216": "41223216",
     "41223217": "41223217",
     "41223218": "41223218",
     "41223219": "41223219",
     "41223220": "ljg41223220",
     "41223221": "leeshaowei0716",
     "41223222": "41223222",
     "41223223": "linryan23",
     "41223224": "41223224",
     "41223225": "41223225",
     "41223226": "41223226-0",
     "41223227": "41223227",
     "41223228": "hyy41223228",
     "41223229": "41223229",
     "41223230": "41223230",
     "41223231": "41223231",
     "41223232": "41223232",
     "41223233": "41223233even",
     "41223234": "41223234",
     "41223235": "41223235",
     "41223236": "41223236",
     "41223237": "Cloud41223237",
     "41223239": "WeihHuang",
     "41223240": "ych0227",
     "41223242": "41223242",
     "41223243": "41223243",
     "41223244": "Liu41223244",
     "41223245": "41223245",
     "41223246": "41223246",
     "41223247": "CYC41223247",
     "41223248": "41223248",
     "41223249": "41223249",
     "41223250": "timluo123",
     "41223251": "41223251",
     "41223252": "supowen",
     "41223253": "jacky93111",
     "41271217": "",
     "41271236": "41271236",
     "41271237": "41271237",
 }
 
 # 已分組的 GitHub 帳號
 b_all_members = {
     "41223251", "41223211", "41223245", "41223243", "jjjay41223212",
     "leeshaowei0716", "41223234", "41223209", "41223205", "41223201",
     "41223202", "41223208-hw", "41223216", "41223217", "41223248",
     "emma0312", "41223242", "41223203", "41223144", "41223235",
     "RAY41223215", "hyy41223228", "41223227", "41223206", "41223226-0",
     "Cloud41223237", "Yujenchuang", "41223225", "ljg41223220", "supowen",
     "jacky93111", "41223246", "Liu41223244", "41223236", "41223219",
     "41271237", "41223249", "41223229", "41223224", "41223222",
     "41223231", "linryan23", "41023114", "41223230", "timluo123",
     "CYC41223247", "41223218", "ych0227", "41023215", "41023216",
     "41023213", "41071203", "41071204", "41071202", "c-ching",
     "YUN4", "tseYU000", "snowfall-killer", "junpig10"
 }
 
 # 找出未分組學生
 ungrouped_students = [
     (stud_num, github_id) for stud_num, github_id in students_2B.items()
     if github_id and github_id not in b_all_members
 ]
 
 # 列出未分組學生
 print("\n== 📌 未分組學生名單 ==")
 for stud_num, github_id in ungrouped_students:
     print(f"學號: {stud_num}, GitHub 帳號: {github_id}")
 </pre>
<p></p>
<h2>task3</h2>
<h2>task4</h2>
<h3>w6</h3>
<p>使用mde.tw的w6資料夾basket_ball_shooter_w7內部零件製圖</p>
<p><span>繪製base_plate-1</span></p>
<p><span><iframe allowfullscreen="allowfullscreen" height="314" src="//www.youtube.com/embed/Y47EgceJRkI" width="560"></iframe></span></p>
<p><span>繪製connected_board-1</span></p>
<p><span><iframe allowfullscreen="allowfullscreen" height="314" src="//www.youtube.com/embed/TGUHGqYf5i0" width="560"></iframe></span></p>
<p><span>繪製shooter-1</span></p>
<p><span><iframe allowfullscreen="allowfullscreen" height="314" src="//www.youtube.com/embed/yXjrSJXgzTw" width="560"></iframe></span></p>
<p><span>繪製press_board-1</span></p>
<p><span><iframe allowfullscreen="allowfullscreen" height="314" src="//www.youtube.com/embed/gYK10r18Tdw" width="560"></iframe></span></p>
<p><span>繪製shaft-1</span></p>
<p><span><iframe allowfullscreen="allowfullscreen" height="314" src="//www.youtube.com/embed/FXx5sCW7Pso" width="560"></iframe></span></p>
<p><span></span></p>
<h2>task5</h2>
<h2>task6</h2>
<h1>Homework</h1>
<p>作業 (30%)</p>
<p>HW1 (5%): <span style="background-color: #ffff00;">建立由 Box 組成的平面四連桿機構 Webots 模擬場景</span></p>
<p style="padding-left: 30px;">part1:</p>
<p style="padding-left: 60px;">請各學員在 USB 隨身碟或個人電腦上完成 cd2025 課程所需的可攜系統配置:</p>
<p style="padding-left: 90px;">下載 <a href="http://229.cycu.org/portable_wcm2025.7z">portable_wcm2025.7z</a> (330MB, 解開壓縮後 1.4GB)</p>
<p style="padding-left: 90px;"><a href="http://229.cycu.org/Webots_2025a.7z">Webots_2025a.7z</a> (1.5 GB, 解開後約為 2.9GB, 可單獨運作)</p>
<p style="padding-left: 90px;"><a href="http://229.cycu.org/Webots_2025a_web.7z">Webots_2025a_web.7z</a> (171 MB, 解開壓縮後約為 1GB, 必須連網運作)</p>
<p style="padding-left: 90px;"><a href="http://229.cycu.org/Blender4.2.7z">Blender4.2.7z</a></p>
<p style="padding-left: 30px;">part2:</p>
<p style="padding-left: 60px;">請各學員完成可攜程式系統配置後, 利用 Webots R2025a 中寬度與高度都為 0.1m 的 box 物件建立一個簡單的平面四連桿機構模擬場景.</p>
<p style="padding-left: 60px;">base (基座) 長度 1m, link1 長度 0.4m, link2 長度 0.6m, link3 長度 0.9m, 各轉軸均為 HingeJoint, joint1 旋轉速度設定為 1radian/sec.</p>
<p style="padding-left: 30px;">part3:</p>
<p style="padding-left: 60px;">模擬場景啟動後, 按下 s 鍵機構開始作動, 按下 p 鍵後機構暫停.</p>
<p style="padding-left: 30px;">參考資料:</p>
<p style="padding-left: 60px;"><a href="/downloads/cd2025_hw1_demo.7z">cd2025_hw1_demo.7z</a></p>
<p>HW2 (5%): <span style="background-color: #ffff00;">建立由 CAD 繪製零件組成的平面四連桿機構 Webots 模擬場景</span></p>
<p style="padding-left: 30px;">各學員請利用 CAD 系統依據 HW1 的連桿尺寸與運動方式, 配置適當大小的旋轉軸以及基座後, 利用 Webots R2025a 完成一個簡單的平面四連桿機構模擬場景.</p>
<p style="padding-left: 30px;">參考資料:</p>
<p style="padding-left: 60px;"><a href="/downloads/fourbar_slvs.7z">fourbar_slvs.7z</a></p>
<p>HW3 (20%):<span style="background-color: #ffff00;">建立 Webots 桌上籃球遊戲機模擬系統</span></p>
<p style="padding-left: 30px;">請各分組利用CAD 系統建立一個能在電腦桌 (1600W X 700D X 740H mm) 上運作的投籃機構 (<a href="https://www.youtube.com/watch?v=LloG_Jn_TI0&amp;t=51s">參考影片</a>)後, 導入 Webots R2025a 套件, 建立一個能由使用者透過鍵盤按鍵操作, 且具備計分板的籃球遊戲機模擬系統.</p>
<p style="padding-left: 30px;">參考資料:</p>
<p>參考資料:</p>
<p style="padding-left: 30px;"><a href="/downloads/fourbar_ball_throwing_linkage.slvs">fourbar_ball_throwing_linkage.slvs</a></p>
<p style="padding-left: 30px;"><a href="/downloads/sixbar_ball_throwing_linkage.slvs">sixbar_ball_throwing_linkage.slvs</a></p>
<p style="padding-left: 30px;"><img alt="" height="264" src="/images/fourbar_ball_throwing_linkage.gif" width="400"/></p>
<h2>HW1</h2>
<p>HW1 (5%): <span style="background-color: #ffff00;">建立由 Box 組成的平面四連桿機構 Webots 模擬場景</span></p>
<p>操作影片標題: 國立虎尾科技大學 - 機械設計工程系 - cd2025 HW1 - 學員學號</p>
<p><span>利用fourbar_slvs資料夾內零件，繪製link 1</span></p>
<p><span><iframe allowfullscreen="allowfullscreen" height="314" src="//www.youtube.com/embed/IZmuwI5coY4" width="560"></iframe></span><span></span></p>
<p><span>利用fourbar_slvs資料夾內零件，繪製link 2</span></p>
<p><span><iframe allowfullscreen="allowfullscreen" height="314" src="//www.youtube.com/embed/GUKi0NyFXWo" width="560"></iframe></span></p>
<p><span>利用fourbar_slvs資料夾內零件，繪製link 3</span></p>
<p><span><iframe allowfullscreen="allowfullscreen" height="314" src="//www.youtube.com/embed/e3cclpQhjUI" width="560"></iframe></span></p>
<p><span>利用fourbar_slvs資料夾內零件，繪製base-1</span></p>
<p><span><iframe allowfullscreen="allowfullscreen" height="314" src="//www.youtube.com/embed/QvSmUKy2poA" width="560"></iframe></span></p>
<p><span>利用fourbar_slvs資料夾內零件，繪製bfourbar_linkage_design-1</span></p>
<p><span><iframe allowfullscreen="allowfullscreen" height="314" src="//www.youtube.com/embed/3T_Y3SmPMSg" width="560"></iframe></span></p>
<p><span>利用fourbar_slvs資料夾內零件，繪製shaft-1</span></p>
<p><span><iframe allowfullscreen="allowfullscreen" height="314" src="//www.youtube.com/embed/ngZNwedW5S8" width="560"></iframe></span></p>
<p><span>利用fourbar_slvs資料夾內零件，繪製shaft-2</span></p>
<p><span><iframe allowfullscreen="allowfullscreen" height="314" src="//www.youtube.com/embed/MXw3cygVvUs" width="560"></iframe></span></p>
<p><span>利用fourbar_slvs資料夾內零件，繪製fourbar_linkage_design_w_assembiy</span></p>
<p><span><iframe allowfullscreen="allowfullscreen" height="314" src="//www.youtube.com/embed/m8WselgiRqw" width="560"></iframe></span></p>
<p><span>先由solvespace畫簡單的模型模擬旋轉路徑，然後再開始使用Webots進行模型的建立</span></p>
<p><span><iframe allowfullscreen="allowfullscreen" height="314" src="//www.youtube.com/embed/7GQWMKD4E6o" width="560"></iframe></span></p>
<p><span></span></p>
<p><span><iframe allowfullscreen="allowfullscreen" height="314" src="//www.youtube.com/embed/Le_fHPt_8HU" width="560"></iframe></span></p>
<p><span></span></p>
<h2>HW2</h2>
<p>HW2 (5%): <span style="background-color: #ffff00;">建立由 CAD 繪製零件組成的平面四連桿機構 Webots 模擬場景</span></p>
<p>操作影片標題: 國立虎尾科技大學 - 機械設計工程系 - cd2025 HW2 - 學員學號</p>
<p>stl檔轉obj檔</p>
<p><iframe allowfullscreen="allowfullscreen" height="314" src="//www.youtube.com/embed/WqJ1XrlcAQY" width="560"></iframe></p>
<p><span>obj放到wobot並模擬操作過程</span></p>
<p><span>檔案壓縮檔 : <a href="/downloads/41223206 HW2.zip">/downloads/41223206 HW2.zip</a></span></p>
<p><iframe allowfullscreen="allowfullscreen" height="314" src="//www.youtube.com/embed/uI7QkpTExQY" width="560"></iframe></p>
<h2>HW3</h2>
<p>HW3 (20%):<span style="background-color: #ffff00;">建立 Webots 桌上籃球遊戲機模擬系統</span></p>
<p>操作影片標題: 國立虎尾科技大學 - 機械設計工程系 - cd2025 HW3 - 學員學號</p>
<p>利用 Solvespace 繪製的 7 段顯示器零組件檔案</p>
<p><span>首先sovlespace繪製出各零件,</span><span>組配完進行拆解轉檔STL轉OBJ,webot組裝過程中要注意到 WorldInfo&gt;coordinateSystem&gt;要改成"NUE" 座標,過程要反覆確認,避免遺漏任何的數值</span></p>
<p>digit_assembly-1</p>
<p><iframe allowfullscreen="allowfullscreen" height="314" src="//www.youtube.com/embed/3_ltxAdzKLU" width="560"></iframe></p>
<p><span>number_center-1</span></p>
<p><span><iframe allowfullscreen="allowfullscreen" height="314" src="//www.youtube.com/embed/0p-BuBqJOU4" width="560"></iframe></span></p>
<p><span>number_stick-1</span></p>
<p><span><iframe allowfullscreen="allowfullscreen" height="314" src="//www.youtube.com/embed/b3SV96ASfOo" width="560"></iframe></span></p>
<p><span>base_plate-1</span></p>
<p><span><iframe allowfullscreen="allowfullscreen" height="314" src="//www.youtube.com/embed/XcH7DlQOpTI" width="560"></iframe></span></p>
<p><span>connected_board-1</span></p>
<p><span><iframe allowfullscreen="allowfullscreen" height="314" src="//www.youtube.com/embed/r0V9dOCDNc4" width="560"></iframe></span></p>
<p><span>press_board-1</span></p>
<p><span><iframe allowfullscreen="allowfullscreen" height="314" src="//www.youtube.com/embed/D3rW8GxEGK4" width="560"></iframe></span></p>
<p><span>shaft-1</span></p>
<p><span><iframe allowfullscreen="allowfullscreen" height="314" src="//www.youtube.com/embed/EqgUGs9rp2w" width="560"></iframe></span></p>
<p><span>shooter-1</span></p>
<p><span><iframe allowfullscreen="allowfullscreen" height="314" src="//www.youtube.com/embed/Xky8Dbv_JkI" width="560"></iframe></span></p>
<p><span>shaft-2</span></p>
<p><span><iframe allowfullscreen="allowfullscreen" height="314" src="//www.youtube.com/embed/ao6yq760WbA" width="560"></iframe></span></p>
<p><span>shaft-3</span></p>
<p><span><iframe allowfullscreen="allowfullscreen" height="314" src="//www.youtube.com/embed/1421RU4kB7Y" width="560"></iframe></span></p>
<p><span>shaft-4</span></p>
<p><span><iframe allowfullscreen="allowfullscreen" height="314" src="//www.youtube.com/embed/725EAMlAriQ" width="560"></iframe></span></p>
<p><span>shaft-5</span></p>
<p><span><iframe allowfullscreen="allowfullscreen" height="314" src="//www.youtube.com/embed/aa7bfXipxC8" width="560"></iframe></span></p>
<p><span>shooter-assembly-1</span></p>
<p><span><iframe allowfullscreen="allowfullscreen" height="314" src="//www.youtube.com/embed/Fs-EX3DvRQA" width="560"></iframe></span></p>
<p><span>shooter-board-1</span></p>
<p><span><iframe allowfullscreen="allowfullscreen" height="314" src="//www.youtube.com/embed/Zr70GUI70rk" width="560"></iframe></span></p>
<p><span>Webots製作影片</span></p>
<p><span><iframe allowfullscreen="allowfullscreen" height="314" src="//www.youtube.com/embed/kGZxgnCDBKs" width="560"></iframe></span></p>
<p>製作遇到問題</p>
<p><span><iframe allowfullscreen="allowfullscreen" height="314" src="//www.youtube.com/embed/_NWLF8k44dk" width="560"></iframe></span></p>
<p><span>成功模擬影片</span></p>
<p><span><iframe allowfullscreen="allowfullscreen" height="314" src="//www.youtube.com/embed/gE4wk48FKGk" width="560"></iframe></span></p>
<p><span>完整模擬檔案:<a href="/downloads/HW3.zip">/downloads/HW3.zip</a></span></p><h1>Midterm</h1>
<p>本課程所繳交的期中成績為學員自評之學習期望成績.</p>
<p>期中考週的自評期望成績繳交流程:</p>
<ol>
<li>整理先前所完成的各週的進度、作業網頁內容以及心得</li>
<li>拍攝期中自評影片, 上傳至 Youtube 後, 以"<span style="background-color: #ffff00;">國立虎尾科技大學 - 機械設計工程系 - cd2025 期中自評- 學員學號</span>"為影片標題後嵌入本頁面中</li>
<li>回填期中自評表單</li>
<li>上傳學員期中成績</li>
</ol>
<p>各週進度:</p>
<p>各週網頁內容:Tanks1和Tanks2內容主要是Brython程式碼，HW1內容為連桿零件和作動</p>
<p>期中心得:常常聽不懂老師要我們做的內容是什麼<span>，查看mde.tw網頁內容來做作業，遇到網頁問題時詢問chat gpt來解決問題，老師會告訴我們為何會出問題，下次就不會再犯了</span></p>
<p>期中自評影片:<iframe allowfullscreen="allowfullscreen" height="314" src="//www.youtube.com/embed/gZf6jd79mBY" width="560"></iframe></p>
<p></p>
<p style="padding-left: 30px;"></p>
<h1>Exam</h1>
<p>Exam1 (10%): 建立 Webots 基本物件模擬場景</p>
<p style="padding-left: 30px;">各學員利用 Webots R2025a 套件中的 Shape 物件, 隨堂建立指定的機電系統模擬場景, 並利用 Python 程式進行互動控制.</p>
<p>Exam2 (10%): 利用 CAD 零組件建立模擬場景 </p>
<p style="padding-left: 30px;">各學員利用 CAD (Solvespace 與 NX2312), 隨堂建立指定的系統模型零組件後, 導入 Webots R2025a 後, 建立機電系統模擬場景, 並利用 Python 程式進行互動控制.</p>
<p>Exam3 (20%): Webots 機電模擬場景的協同設計</p>
<p style="padding-left: 30px;">各分組利用 CAD (Solvespace 與 NX2312), 隨堂建立指定的系統模型零組件後, 導入 Webots R2025a 後, 建立機電系統模擬場景, 並利用 Python 程式進行互動控制. 過程中各學員必須採同步協同模式, 維護從 Github Classroom 取得的分組協同倉儲以及網站.</p>
<p style="padding-left: 30px;">協同分組方式:</p>
<ol>
<li>分配學員負責利用 Solvespace 建立系統零組件, 過程中必須將所建構之零組件檔案與繪圖過程影片上傳至分組網頁.</li>
<li>分配學員負責利用 NX2312 建立系統零組件, 過程中必須將所建構之零組件檔案與繪圖過程影片上傳至分組網頁.</li>
<li>分配學員負責利用 Webots 建立機電系統模擬場景, 並利用 Python 程式進行控制, 過程中必須將建構過程拍成帶有說明字幕的影片上傳至分組網頁.</li>
</ol>
<h2>Exam1</h2>
<p>Exam1 (10%): 建立 Webots 基本物件模擬場景</p>
<p>操作影片標題: 國立虎尾科技大學 - 機械設計工程系 - cd2025 Exam1 - 學員學號</p>
<h2>Exam2</h2>
<p>Exam2 (10%): 利用 CAD 零組件建立模擬場景</p>
<p>操作影片標題: 國立虎尾科技大學 - 機械設計工程系 - cd2025 Exam2 - 學員學號</p>
<h2>Exam3</h2>
<p>Exam3 (20%): Webots 機電模擬場景的協同設計</p>
<p>操作影片標題: 國立虎尾科技大學 - 機械設計工程系 - cd2025 Exam3 - 學員學號</p>
<h1>Final</h1>
<p><span>期末協同專案執行過程影片、簡報與 PDf 報告檔案 (六人一組) (30%)</span></p>
<p><span>題目: <span style="background-color: #ccffcc;">Webots 動態投籃模擬系統的協同設計</span></span></p>
<p><span>說明: </span></p>
<p style="padding-left: 30px;"><span>籃框架被配置在一定範圍內, 可隨機慢速前進、後退及左右擺動, 投籃機構系統帶有一定數量的籃球, 被配置在可自由移動的輪車上.</span></p>
<p style="padding-left: 30px;"><span>操作者可利用鍵盤特定按鍵控制投籃輪車的移動並發射投籃, 每投出一球後系統透過記分板進行計分, 並由送球機構進行補球或移動輪車取球, 遊戲可進行至全部數量籃球投完為止.</span></p>
<p>請將期末協同專案執行過程、內容與心得, 製作成影片，配合字幕上傳至 Youtube 後嵌入各階段的期末報告頁面中.</p>
<p>影片標題: <span style="background-color: #ffff00;">國立虎尾科技大學 - 機械設計工程系 - cd2025 期末報告 - 學員學號 - 各階段影片主題<br/></span></p>
<h1>Brython</h1>
<p><button id="add1to100">1 add to 100</button></p>
<!-- 導入 brython 程式庫 -->
<p>
<script src="/static/brython.js"></script>
<script src="/static/brython_stdlib.js"></script>
</p>
<!-- 啟動 Brython -->
<p>
<script>
 window.onload=function(){
 brython({debug:1, pythonpath:['/static/','./../downloads/py/']});
 }
 
</script>
</p>
<p><!-- 導入 FileSaver 與 filereader --></p>
<p>
<script src="/static/ace/FileSaver.min.js" type="text/javascript"></script>
<script src="/static/ace/filereader.js" type="text/javascript"></script>
</p>
<p><!-- 導入 ace --></p>
<p>
<script src="/static/ace/ace.js" type="text/javascript"></script>
<script src="/static/ace/ext-language_tools.js" type="text/javascript"></script>
<script src="/static/ace/mode-python3.js" type="text/javascript"></script>
<script src="/static/ace/snippets/python.js" type="text/javascript"></script>
</p>
<p><!-- 導入 gearUtils-0.9.js Cango 齒輪繪圖程式庫 -->
<script src="/static/Cango-24v03-min.js"></script>
<script src="/static/gearUtils-09.js"></script>
<script src="/static/SVGpathUtils-6v03-min.js"></script>
<script src="/static/sylvester.js"></script>
<script src="/static/PrairieDraw.js"></script>
</p>
<p><!-- 請注意, 這裡使用 Javascript 將 localStorage["kw_py_src1"] 中存在近端瀏覽器的程式碼, 由使用者決定存檔名稱--></p>
<p>
<script type="text/javascript">
 function doSave(storage_id, filename){
     var blob = new Blob([localStorage[storage_id]], {type: "text/plain;charset=utf-8"});
     filename = document.getElementById(filename).value
     saveAs(blob, filename+".py");
 }
 
</script>
</p>
<p>
<script type="text/python3">
 from browser import document as doc
 import ace
 # 清除畫布
 def clear_bd1(ev):
     bd = doc["brython_div1"]
     bd.clear()
 Ace1 = ace.Editor(editor_id="kw_editor1", console_id="kw_console1", container_id="kw__container1", storage_id="kw_py_src1" )
 # 從 gist 取出程式碼後, 放入 editor 作為 default 程式
 def run1():
     # 利用 get 取下 src 變數值
     try:
         url = doc.query["src"]
     except:
         url = "https://gist.githubusercontent.com/mdecourse/0229a8a017091476a79700b8a190f185/raw/c3a6deaf717f8f2739a4b1392a5ab10936e9693a/from_1_add_to_10_1.py"
     prog = open(url).read()
 
     # 將程式載入編輯區
     Ace1.editor.setValue(prog)
     Ace1.editor.scrollToRow(0)
     Ace1.editor.gotoLine(0)
     # 直接執行程式
     #ns = {'__name__':'__main__'}
     #exec(prog, ns)
     # 按下 run 按鈕
     Ace1.run()
 
 # 執行程式, 顯示輸出結果與清除輸出結果及對應按鈕綁定
 doc['kw_run1'].bind('click', Ace1.run)
 doc['kw_show_console1'].bind('click', Ace1.show_console)
 doc['kw_clear_console1'].bind('click', Ace1.clear_console)
 doc['clear_bd1'].bind('click', clear_bd1)
 # 呼叫函式執行
 run1()
 
</script>
</p>
<p><!-- add 1 to 100 開始 -->
<script type="text/python3">
 from browser import document as doc
 import ace
 
 # 清除畫布
 def clear_bd1(ev):
     bd = doc["brython_div1"]
     bd.clear()
 
 # 利用 ace 中的 Editor 建立 Ace2 物件, 其中的輸入變數分別對應到頁面中的編輯區物件
 Ace2 = ace.Editor(editor_id="kw_editor1", console_id="kw_console1", container_id="kw__container1", storage_id="kw_py_src1" )
 
 add1to100_url = "https://gist.githubusercontent.com/mdecourse/0229a8a017091476a79700b8a190f185/raw/c48e37714f055c3a0027cbfef59e442a6ef659b9/from_1_add_to_100_1.py"
 
 # 從 gist 取得程式碼
 add_src = open(add1to100_url).read()
 def add(ev):
     Ace2.editor.setValue(add_src)
     Ace2.editor.scrollToRow(0)
     Ace2.editor.gotoLine(0)
     Ace2.run()
 
 # id 為 "add1to100" 的按鈕點按時, 執行 add 方法
 doc["add1to100"].bind('click', add)
 
</script>
</p>
<p><!-- add 1 to 100 結束--></p>
<!-- editor1 開始 -->
<p><!-- 用來顯示程式碼的 editor 區域 --></p>
<div id="kw_editor1" style="width: 600px; height: 300px;"></div>
<p><!-- 以下的表單與按鈕與前面的 Javascript doSave 函式以及 FileSaver.min.js 互相配合 --></p>
<p><!-- 存擋表單開始 --></p>
<form><label>Filename: <input id="kw_filename" placeholder="input file name" type="text"/>.py</label> <input onclick="doSave('kw_py_src1', 'kw_filename1');" type="submit" value="Save"/></form>
<p><!-- 存擋表單結束 --></p>
<p></p>
<p><!-- 執行與清除按鈕開始 --></p>
<p><button id="kw_run1">Run</button> <button id="kw_show_console1">Output</button> <button id="kw_clear_console1">清除輸出區</button><button id="clear_bd1">清除繪圖區</button><button onclick="window.location.reload()">Reload</button></p>
<p><!-- 執行與清除按鈕結束 --></p>
<p></p>
<p><!-- 程式執行 ouput 區 --></p>
<div style="width: 100%; height: 100%;"><textarea autocomplete="off" id="kw_console1"></textarea></div>
<p><!-- Brython 程式執行的結果, 都以 brython_div1 作為切入位置 --></p>
<div id="brython_div1"></div>
<!-- editor1 結束 --><hr/><!-- ########################################## -->
<p>從 1 累加到 100 part2:</p>
<p><button id="add1to100part2">1 add to 100</button><button id="cango_three_gears">cango_three_gears</button><button id="bsnake">BSnake</button><button id="aitetris">AI Tetris</button></p>
<p><!-- 請注意, 這裡使用 Javascript 將 localStorage["kw_py_src2"] 中存在近端瀏覽器的程式碼, 由使用者決定存檔名稱--></p>
<p>
<script type="text/python3">
 from browser import document as doc
 import ace
 # 清除畫布
 def clear_bd2(ev):
     bd = doc["brython_div2"]
     bd.clear()
 Ace3 = ace.Editor(editor_id="kw_editor2", console_id="kw_console2", container_id="kw__container2", storage_id="kw_py_src2" )
 # 從 gist 取出程式碼後, 放入 editor 作為 default 程式
 def run2():
     # 利用 get 取下 src 變數值
     try:
         url = doc.query["src2"]
     except:
         url = "https://gist.githubusercontent.com/mdecourse/0229a8a017091476a79700b8a190f185/raw/c3a6deaf717f8f2739a4b1392a5ab10936e9693a/from_1_add_to_10_1.py"
     prog = open(url).read()
 
     # 將程式載入編輯區
     Ace3.editor.setValue(prog)
     Ace3.editor.scrollToRow(0)
     Ace3.editor.gotoLine(0)
     # 直接執行程式
     #ns = {'__name__':'__main__'}
     #exec(prog, ns)
     # 按下 run 按鈕
     Ace3.run()
 
 # 執行程式, 顯示輸出結果與清除輸出結果及對應按鈕綁定
 doc['kw_run2'].bind('click', Ace3.run)
 doc['kw_show_console2'].bind('click', Ace3.show_console)
 doc['kw_clear_console2'].bind('click', Ace3.clear_console)
 doc['clear_bd2'].bind('click', clear_bd2)
 # 呼叫函式執行
 run2()
 
</script>
</p>
<p><!-- add 1 to 100 part2 開始 -->
<script type="text/python3">
 from browser import document as doc
 import ace
 
 # 清除畫布
 def clear_bd2(ev):
     bd = doc["brython_div2"]
     bd.clear()
 
 # 利用 ace 中的 Editor 建立 Ace2 物件, 其中的輸入變數分別對應到頁面中的編輯區物件
 Ace4 = ace.Editor(editor_id="kw_editor2", console_id="kw_console2", container_id="kw__container2", storage_id="kw_py_src2" )
 
 # 透過 Ace4 以類別建立一個通用的 button2, 可以在多個案例中將 gist 程導入編輯區
 
 class button2:
     def __init__(self, url):
         self.url = url
 
     # 記得加入 event 輸入變數
     def do(self,ev):
         Ace4.editor.setValue(open(self.url).read())
         Ace4.editor.scrollToRow(0)
         Ace4.editor.gotoLine(0)
         Ace4.run()
 
 add1to100_url = "https://gist.githubusercontent.com/mdecourse/0229a8a017091476a79700b8a190f185/raw/c48e37714f055c3a0027cbfef59e442a6ef659b9/from_1_add_to_100_1.py"
 
 # 從 gist 取得程式碼
 add_src = open(add1to100_url).read()
 def add2(ev):
     Ace4.editor.setValue(add_src)
     Ace4.editor.scrollToRow(0)
     Ace4.editor.gotoLine(0)
     Ace4.run()
 
 # id 為 "add1to100part2" 的按鈕點按時, 執行 add 方法
 doc["add1to100part2"].bind('click', add2)
 # 以下為運用 button2 class 的通用 gist 程式導入區
 ################################## cango_three_gears start
 cango_three_gears_url = "https://gist.githubusercontent.com/mdecycu/d9082d678096bd58378d6afe2c7fa05d/raw/f7a85d737d6723d5e34c526d5daee990ed92c32b/cango_three_gears_brython_div2.py"
 cango_three_gears = button2(cango_three_gears_url)
 doc["cango_three_gears"].bind("click", cango_three_gears.do)
 ################################## cango_three_gears end
 ################################## bsnake start
 bsnake_url = "https://gist.githubusercontent.com/mdecycu/d9082d678096bd58378d6afe2c7fa05d/raw/f7a85d737d6723d5e34c526d5daee990ed92c32b/kmol_snakey.py"
 bsnake = button2(bsnake_url)
 doc["bsnake"].bind("click", bsnake.do)
 ################################## bsnake end
 ################################## aitetris start
 aitetris_url = "https://gist.githubusercontent.com/mdecycu/d9082d678096bd58378d6afe2c7fa05d/raw/f7a85d737d6723d5e34c526d5daee990ed92c32b/pygame_to_brython_tetris_ai.py"
 aitetris = button2(aitetris_url)
 doc["aitetris"].bind("click", aitetris.do)
 ################################## aitetris end
 
</script>
</p>
<p><!-- add 1 to 100 part2 結束--></p>
<!-- editor2 開始 -->
<p><!-- 用來顯示程式碼的 editor 區域 --></p>
<div id="kw_editor2" style="width: 600px; height: 300px;"></div>
<p><!-- 以下的表單與按鈕與前面的 Javascript doSave 函式以及 FileSaver.min.js 互相配合 --></p>
<p><!-- 存擋表單開始 --></p>
<form><label>Filename: <input id="kw_filename2" placeholder="input file name" type="text"/>.py</label> <input onclick="doSave('kw_py_src2', 'kw_filename2');" type="submit" value="Save"/></form>
<p><!-- 存擋表單結束 --></p>
<p></p>
<p><!-- 執行與清除按鈕開始 --></p>
<p><button id="kw_run2">Run</button> <button id="kw_show_console2">Output</button> <button id="kw_clear_console2">清除輸出區</button><button id="clear_bd2">清除繪圖區</button><button onclick="window.location.reload()">Reload</button></p>
<p><!-- 執行與清除按鈕結束 --></p>
<p></p>
<p><!-- 程式執行 ouput 區 --></p>
<div style="width: 100%; height: 100%;"><textarea autocomplete="off" id="kw_console2"></textarea></div>
<p><!-- Brython 程式執行的結果, 都以 brython_div1 作為切入位置 --></p>
<div id="brython_div2"></div>
<!-- editor2 結束 --><hr/>
<p>
<script src="https://unpkg.com/three@0.144.0/build/three.js" type="text/javascript"></script>
</p>